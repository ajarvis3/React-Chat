[{"E:\\OneDrive\\Documents\\Programming\\React\\chat\\client\\src\\index.js":"1","E:\\OneDrive\\Documents\\Programming\\React\\chat\\client\\src\\Chat.js":"2","E:\\OneDrive\\Documents\\Programming\\React\\chat\\client\\src\\App.js":"3","E:\\OneDrive\\Documents\\Programming\\React\\chat\\client\\src\\reportWebVitals.js":"4"},{"size":500,"mtime":1607619367873,"results":"5","hashOfConfig":"6"},{"size":3195,"mtime":1610378963162,"results":"7","hashOfConfig":"6"},{"size":2895,"mtime":1610379544697,"results":"8","hashOfConfig":"6"},{"size":362,"mtime":1607619367873,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"b5onzs",{"filePath":"12","messages":"13","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"14"},{"filePath":"15","messages":"16","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"E:\\OneDrive\\Documents\\Programming\\React\\chat\\client\\src\\index.js",[],"E:\\OneDrive\\Documents\\Programming\\React\\chat\\client\\src\\Chat.js",["19"],"import \"./Chat.css\";\r\nimport React, {useState, useEffect} from 'react';\r\n\r\n/**\r\n * Represents a single message\r\n * @param {*} props \r\n */\r\nfunction Message(props)\r\n{\r\n    return (\r\n        <div className=\"message style-text-box\">\r\n            <div className=\"user-tag\">\r\n                User: {props.user}\r\n            </div>\r\n            <div className=\"message-text\">\r\n                {props.message}\r\n            </div>\r\n        </div>\r\n        );\r\n}\r\n\r\n/**\r\n * Used for sending a message\r\n * @param {*} props \r\n */\r\nfunction SendMessage(props)\r\n{\r\n    const [message, setMessage] = useState(\"\");\r\n    const [name, setName] = useState(\"\");\r\n\r\n    function sendMessage()\r\n    {\r\n        props.connection.send('SendMessage', name, message, props.group);\r\n        setMessage(\"\");\r\n    }\r\n\r\n    function handleChange(event) {\r\n        setMessage(event.target.value);\r\n    }\r\n\r\n    function handleName(event) {\r\n        setName(event.target.value);\r\n    }\r\n\r\n    return (\r\n        <div className=\"new-message\">\r\n            New Message:\r\n            <textarea \r\n                className=\"style-ta style-text-box\" \r\n                value={name} \r\n                onChange={handleName} \r\n                placeholder=\"Name\" />\r\n            <textarea \r\n                className=\"style-ta style-text-box\" \r\n                value={message} \r\n                onChange={handleChange} \r\n                placeholder=\"Message\" />\r\n            <button onClick={sendMessage} className=\"style-button\">\r\n                Send Message\r\n            </button>\r\n     </div>\r\n    )\r\n}\r\n\r\n/**\r\n * Delete button for this chat\r\n * @param {*} props \r\n */\r\nfunction Delete(props) \r\n{\r\n    return (\r\n        <div className=\"delete-area\">\r\n            <button className=\"style-button\" onClick={props.delete}>\r\n                Remove\r\n            </button>\r\n        </div>\r\n    )\r\n}\r\n\r\n/**\r\n * Represents a single chat group\r\n * @param {*} props \r\n */\r\nfunction Chat(props)\r\n{\r\n    const [messages, setMessages] = useState([]);\r\n\r\n    // Sets up signalr callback\r\n    const receiveMessage = (user, message, id) => {\r\n        const newMessages = messages.slice();\r\n        newMessages.push({user: user, message: message, id: id});\r\n        setMessages(newMessages);\r\n    };    \r\n\r\n    // Sets up receiving message\r\n    useEffect(() => {\r\n        props.connection.on(`ReceiveMessage${props.group}`, receiveMessage);\r\n\r\n        // prevent multiple calls to event handler\r\n        return function cleanup() {\r\n            props.connection.off(`ReceiveMessage${props.group}`, receiveMessage);\r\n        }\r\n    }, [props.group, messages, props.connection, receiveMessage]);\r\n\r\n    const messageComponents = messages.map((value) => {\r\n        return (\r\n            <Message key={value.id} user={value.user} message={value.message} />\r\n        )\r\n    });\r\n\r\n    return (\r\n        <div className=\"chat-group\">\r\n            {props.group}\r\n            <Delete \r\n                group={props.group} \r\n                delete={() => props.delete(props.group, props.chats)} />\r\n            <SendMessage connection={props.connection} group={props.group} />\r\n            {messageComponents}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Chat;\r\n","E:\\OneDrive\\Documents\\Programming\\React\\chat\\client\\src\\App.js",[],"E:\\OneDrive\\Documents\\Programming\\React\\chat\\client\\src\\reportWebVitals.js",[],{"ruleId":"20","severity":1,"message":"21","line":89,"column":11,"nodeType":"22","endLine":93,"endColumn":6},"react-hooks/exhaustive-deps","The 'receiveMessage' function makes the dependencies of useEffect Hook (at line 103) change on every render. Move it inside the useEffect callback. Alternatively, wrap the definition of 'receiveMessage' in its own useCallback() Hook.","VariableDeclarator"]